{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Tarik\\\\Desktop\\\\DWS - projekat\\\\HopZoneV2\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\Tarik\\\\Desktop\\\\DWS - projekat\\\\HopZoneV2\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Tarik\\\\Desktop\\\\DWS - projekat\\\\HopZoneV2\\\\ClientApp\\\\src\\\\components\\\\MapPage\\\\MapPage.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup, Source, Layer } from \"react-map-gl\";\nimport Geocoder from 'react-mapbox-gl-geocoder';\nimport { HashRouter as Router, Route as RouteDom, Link, NavLink } from 'react-router-dom';\nimport Spot from './Spot/spot';\nimport Route from './Route/Route';\nimport './index.css';\nimport marker_blue from \"../../assets/images/marker.svg\";\nimport marker_red from \"../../assets/images/marker_red.svg\";\nvar MAPBOX_TOKEN = 'pk.eyJ1IjoidGFyaWsxMjMiLCJhIjoiY2s4cHY2czYxMGs0ZTNlbmxhcXhlOGZoYiJ9.aulPYqQ5WMIpgqa3w-eXhg'; // Set your mapbox token here\n\nvar mapAccess = {\n  mapboxApiAccessToken: MAPBOX_TOKEN\n};\nvar queryParams = {};\n\nvar MyInput = function MyInput(props) {\n  return /*#__PURE__*/React.createElement(\"input\", Object.assign({}, props, {\n    placeholder: \"Search city here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 28\n    }\n  }));\n};\n\nexport default function MapPage() {\n  var _this2 = this;\n\n  var _useState = useState({\n    latitude: 43.8563,\n    longitude: 18.4131,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      viewport = _useState2[0],\n      setViewport = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      event = _useState4[0],\n      setEvent = _useState4[1];\n\n  var oldMarkers = [{\n    key: 0,\n    langitude: 43,\n    latitude: 17\n  }, {\n    key: 1,\n    langitude: 43,\n    latitude: 18\n  }];\n  var oldRoutMarkers = [{\n    key: 0,\n    longitude: 43.89292808086501,\n    latitude: 18.478331323240063\n  }, {\n    key: 1,\n    longitude: 43.945356108950406,\n    latitude: 18.595747705076015\n  }, {\n    key: 2,\n    longitude: 43.98637599443554,\n    latitude: 18.39730715331789\n  }, {\n    key: 3,\n    longitude: 43.98637599443554,\n    latitude: 18.269591088864743\n  }];\n  var polylineGeoJSON = {\n    'type': 'Feature',\n    'properties': {},\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[18.478331323240063 + 0.007, 43.89292808086501 - 0.006], [18.595747705076015 + 0.007, 43.945356108950406 - 0.006], [18.39730715331789 + 0.007, 43.98637599443554 - 0.006], [18.269591088864743 + 0.007, 43.98637599443554 - 0.006]]\n    }\n  };\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      markers = _useState6[0],\n      setMarkers = _useState6[1];\n\n  var _useState7 = useState([0, 0]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      count = _useState8[0],\n      setCount = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      routeMarkers = _useState10[0],\n      setRoutMarkers = _useState10[1];\n\n  useEffect(function () {}, [count]);\n  useEffect(function () {}, [event]);\n\n  var _onClick = function _onClick(event) {\n    console.log(event);\n    setCount(event.lngLat);\n    var newElement = {\n      key: oldMarkers[oldMarkers.length - 1].key + 1,\n      longitude: event.lngLat[1],\n      latitude: event.lngLat[0]\n    };\n    setEvent(event);\n    setMarkers([newElement]);\n    console.log(markers);\n  };\n\n  var onSelected = function onSelected(viewport, item) {\n    setViewport({\n      latitude: viewport.latitude,\n      longitude: viewport.longitude,\n      width: viewport.width,\n      height: viewport.height,\n      zoom: 10\n    });\n    console.log('Selected: ', item, viewport);\n  };\n\n  var makeRoute = function makeRoute() {\n    var newElement = {\n      key: routeMarkers.length + 1,\n      longitude: event.lngLat[1],\n      latitude: event.lngLat[0]\n    };\n    setRoutMarkers([].concat(_toConsumableArray(routeMarkers), [newElement]));\n  };\n\n  var deleteSpotOnRoute = function deleteSpotOnRoute(m) {\n    var key = m.key;\n    setRoutMarkers(routeMarkers.filter(function (item) {\n      return item.key !== key;\n    }));\n  };\n\n  var submitRoute = function submitRoute() {\n    setRoutMarkers(routeMarkers.filter(function (item) {\n      return item.key === 0;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conteiner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    width: \"100vw\",\n    height: \"100vh\",\n    mapStyle: \"mapbox://styles/tarik123/ck8pw5r7917r61iqjvn5knhrt\",\n    onViewportChange: setViewport,\n    mapboxApiAccessToken: MAPBOX_TOKEN,\n    doubleClickZoom: false,\n    onClick: _onClick,\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Source, {\n    id: \"polylineLayer\",\n    type: \"geojson\",\n    data: polylineGeoJSON,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Layer, {\n    id: \"lineLayer\",\n    type: \"line\",\n    source: \"my-data\",\n    paint: {\n      'line-color': 'rgba(3, 170, 238, 0.5)',\n      'line-width': 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  })), oldMarkers.map(function (m) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: m.key,\n      latitude: m.langitude,\n      longitude: m.latitude,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"image\",\n      src: marker_blue,\n      width: \"20px\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }));\n  }), markers.map(function (m) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: m.key,\n      latitude: m.longitude,\n      longitude: m.latitude,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"image\",\n      src: marker_red,\n      width: \"20px\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }));\n  }), routeMarkers.map(function (m) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: m.key,\n      latitude: m.longitude,\n      longitude: m.latitude,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"image\",\n      src: marker_red,\n      width: \"20px\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }));\n  }), oldRoutMarkers.map(function (m) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: m.key,\n      latitude: m.longitude,\n      longitude: m.latitude,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"image\",\n      src: marker_red,\n      width: \"20px\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageSwitcher-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    exact: true,\n    to: \"/mappage\",\n    activeClassName: \"PageSwitcher__Item-map--Active\",\n    className: \"PageSwitcher__Item-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, \"Map\"), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/mappage/spot\",\n    activeClassName: \"PageSwitcher__Item-map--Active\",\n    className: \"PageSwitcher__Item-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, \"Spot\"), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/mappage/route\",\n    activeClassName: \"PageSwitcher__Item-map--Active\",\n    className: \"PageSwitcher__Item-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, \"Route\"))), /*#__PURE__*/React.createElement(RouteDom, {\n    path: \"/mappage/spot/\",\n    exact: true,\n    render: function render(props) {\n      return /*#__PURE__*/React.createElement(Spot, Object.assign({}, props, {\n        langitude: count[0],\n        latitude: count[1],\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 36\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RouteDom, {\n    path: \"/mappage/route\",\n    render: function render(props) {\n      return /*#__PURE__*/React.createElement(Route, Object.assign({}, props, {\n        langitude: count[0],\n        latitude: count[1],\n        routeHandler: makeRoute,\n        addedRouts: routeMarkers,\n        deleteHandler: deleteSpotOnRoute,\n        submitHandler: submitRoute,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 64\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Geocoder, Object.assign({}, mapAccess, {\n    onSelected: onSelected,\n    viewport: viewport,\n    hideOnSelect: true,\n    queryParams: queryParams,\n    reverseGeocode: \"true\",\n    inputComponent: MyInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Tarik/Desktop/DWS - projekat/HopZoneV2/ClientApp/src/components/MapPage/MapPage.js"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","Source","Layer","Geocoder","HashRouter","Router","Route","RouteDom","Link","NavLink","Spot","MAPBOX_TOKEN","mapAccess","mapboxApiAccessToken","queryParams","MyInput","props","MapPage","latitude","longitude","width","height","zoom","viewport","setViewport","event","setEvent","oldMarkers","key","langitude","oldRoutMarkers","polylineGeoJSON","markers","setMarkers","count","setCount","routeMarkers","setRoutMarkers","_onClick","console","log","lngLat","newElement","length","onSelected","item","makeRoute","deleteSpotOnRoute","m","filter","submitRoute","map","marker_blue","marker_red"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup, Source, Layer } from \"react-map-gl\";\r\nimport Geocoder from 'react-mapbox-gl-geocoder';\r\nimport { HashRouter as Router, Route as RouteDom, Link, NavLink } from 'react-router-dom';\r\nimport Spot from './Spot/spot';\r\nimport Route from './Route/Route';\r\nimport './index.css';\r\nimport marker_blue from '../../assets/images/marker.svg';\r\nimport marker_red from '../../assets/images/marker_red.svg';\r\n\r\n\r\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoidGFyaWsxMjMiLCJhIjoiY2s4cHY2czYxMGs0ZTNlbmxhcXhlOGZoYiJ9.aulPYqQ5WMIpgqa3w-eXhg'; // Set your mapbox token here\r\n\r\n\r\n\r\n\r\n\r\nconst mapAccess = {\r\n    mapboxApiAccessToken: MAPBOX_TOKEN\r\n};\r\n\r\n\r\nconst queryParams = {\r\n\r\n};\r\n\r\nconst MyInput = (props) => <input {...props} placeholder=\"Search city here\" />\r\n\r\n\r\n\r\n\r\n\r\nexport default function MapPage() {\r\n\r\n    const [viewport, setViewport] = useState({\r\n        latitude: 43.8563,\r\n        longitude: 18.4131,\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        zoom: 10\r\n    });\r\n\r\n    const [event, setEvent] = useState({});\r\n\r\n    const oldMarkers = [{ key: 0, langitude: 43, latitude: 17 }, { key: 1, langitude: 43, latitude: 18 }];\r\n    const oldRoutMarkers = [\r\n        { key: 0, longitude: 43.89292808086501, latitude: 18.478331323240063 }, { key: 1, longitude: 43.945356108950406, latitude: 18.595747705076015 },\r\n\r\n        { key: 2, longitude: 43.98637599443554, latitude: 18.39730715331789 }, { key: 3, longitude: 43.98637599443554, latitude: 18.269591088864743 }\r\n    ];\r\n    const polylineGeoJSON = {\r\n        'type': 'Feature',\r\n        'properties': {},\r\n        'geometry': {\r\n            'type': 'LineString',\r\n            'coordinates': [\r\n                [18.478331323240063 + 0.007, 43.89292808086501 - 0.006],\r\n                [18.595747705076015 + 0.007, 43.945356108950406 - 0.006],\r\n                [18.39730715331789 + 0.007, 43.98637599443554 - 0.006],\r\n                [18.269591088864743 + 0.007, 43.98637599443554 -0.006]\r\n            ]\r\n        }\r\n    }\r\n\r\n    const [markers, setMarkers] = useState([]);\r\n\r\n    const [count, setCount] = useState([0, 0]);\r\n\r\n    const [routeMarkers, setRoutMarkers] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n    }, [count]);\r\n    useEffect(() => {\r\n\r\n    }, [event]);\r\n\r\n\r\n    const _onClick = (event) => {\r\n        console.log(event);\r\n        setCount(event.lngLat);\r\n        let newElement = {\r\n            key: oldMarkers[oldMarkers.length - 1].key + 1,\r\n            longitude: event.lngLat[1],\r\n            latitude: event.lngLat[0]\r\n        }\r\n        setEvent(event);\r\n        setMarkers([newElement]);\r\n        console.log(markers);\r\n    }\r\n\r\n    const onSelected = (viewport, item) => {\r\n        setViewport({\r\n            latitude: viewport.latitude,\r\n            longitude: viewport.longitude,\r\n            width: viewport.width,\r\n            height: viewport.height,\r\n            zoom: 10\r\n        });\r\n        console.log('Selected: ', item, viewport);\r\n    };\r\n\r\n    const makeRoute = () => {\r\n        let newElement = {\r\n            key: routeMarkers.length + 1,\r\n            longitude: event.lngLat[1],\r\n            latitude: event.lngLat[0]\r\n        };\r\n        setRoutMarkers([...routeMarkers, newElement]);\r\n\r\n\r\n    };\r\n\r\n    const deleteSpotOnRoute = (m) => {\r\n        const key = m.key;\r\n\r\n        setRoutMarkers(routeMarkers.filter(item => item.key !== key));\r\n    }\r\n\r\n    const submitRoute = () => {\r\n        setRoutMarkers(routeMarkers.filter(item => item.key === 0));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"conteiner\">\r\n\r\n\r\n            <ReactMapGL\r\n                {...viewport}\r\n                width=\"100vw\"\r\n                height=\"100vh\"\r\n                mapStyle=\"mapbox://styles/tarik123/ck8pw5r7917r61iqjvn5knhrt\"\r\n                onViewportChange={setViewport}\r\n                mapboxApiAccessToken={MAPBOX_TOKEN}\r\n                doubleClickZoom={false}\r\n                onClick={_onClick}\r\n                className=\"map\"\r\n            >\r\n\r\n                <Source id='polylineLayer' type='geojson' data={polylineGeoJSON}>\r\n                    <Layer\r\n                        id='lineLayer'\r\n                        type='line'\r\n                        source='my-data'\r\n                        \r\n                        paint={{\r\n                            'line-color': 'rgba(3, 170, 238, 0.5)',\r\n                            'line-width': 5,\r\n                        }}\r\n                    />\r\n                </Source>\r\n\r\n                {oldMarkers.map(m => (\r\n                    <Marker key={m.key} latitude={m.langitude} longitude={m.latitude}>\r\n\r\n                        <input type=\"image\" src={marker_blue}  width=\"20px\" />\r\n                    </Marker>\r\n                ))}\r\n\r\n                {markers.map(m => (\r\n                    <Marker key={m.key} latitude={m.longitude} longitude={m.latitude}>\r\n\r\n                        <input type=\"image\" src={marker_red}  width=\"20px\" />\r\n                    </Marker>\r\n                ))}\r\n\r\n\r\n                {routeMarkers.map(m => (\r\n                    <Marker key={m.key} latitude={m.longitude} longitude={m.latitude}>\r\n\r\n                        <input type=\"image\" src={marker_red}  width=\"20px\" />\r\n                    </Marker>\r\n                ))}\r\n\r\n\r\n                {oldRoutMarkers.map(m => (\r\n                    <Marker key={m.key} latitude={m.longitude} longitude={m.latitude}>\r\n\r\n                        <input type=\"image\" src={marker_red}  width=\"20px\" />\r\n                    </Marker>\r\n                ))}\r\n\r\n            </ReactMapGL>\r\n            <div className=\"overlay-nav\">\r\n                <div className=\"PageSwitcher-map\">\r\n                    <NavLink exact to=\"/mappage\" activeClassName=\"PageSwitcher__Item-map--Active\" className=\"PageSwitcher__Item-map\">Map</NavLink>\r\n                    <NavLink to=\"/mappage/spot\" activeClassName=\"PageSwitcher__Item-map--Active\" className=\"PageSwitcher__Item-map\">Spot</NavLink>\r\n                    <NavLink to=\"/mappage/route\" activeClassName=\"PageSwitcher__Item-map--Active\" className=\"PageSwitcher__Item-map\">Route</NavLink>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <RouteDom path=\"/mappage/spot/\" exact\r\n                render={(props) => <Spot {...props} langitude={count[0]} latitude={count[1]} />} >\r\n            </RouteDom>\r\n            <RouteDom path=\"/mappage/route\" render={(props) => <Route {...props} langitude={count[0]} latitude={count[1]}\r\n                routeHandler={makeRoute} addedRouts={routeMarkers} deleteHandler={deleteSpotOnRoute} submitHandler={submitRoute} />}>\r\n            </RouteDom>\r\n\r\n            <Geocoder\r\n                {...mapAccess} onSelected={onSelected} viewport={viewport} hideOnSelect={true}\r\n                queryParams={queryParams} reverseGeocode=\"true\" inputComponent={MyInput}\r\n            />\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}